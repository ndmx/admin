{"ast":null,"code":"import { useRef } from \"react\";\nimport { addDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nexport const sendMessage = async (fromId, toId, messageObj) => {\n  const userRef = db.collection(\"users\");\n  try {\n    const fromUser = await getUser(fromId);\n    const toUser = await getUser(toId);\n    if (!fromUser || !toUser) {\n      return false;\n    }\n    messageObj.timestamp = getTimestamp();\n    await updateUser(fromId, {\n      sentMessages: addMessage(fromUser.sentMessages, messageObj)\n    });\n    await updateUser(toId, {\n      mailbox: addMessage(toUser.mailbox, messageObj)\n    });\n    return true;\n  } catch (error) {\n    console.error(\"Error sending message: \", error);\n    return false;\n  }\n};\nconst getUser = async userId => {\n  const userDoc = await db.collection(\"users\").doc(userId).get();\n  return userDoc.exists ? userDoc.data() : null;\n};\nconst updateUser = async (userId, data) => {\n  await db.collection(\"users\").doc(userId).update(data);\n};\nconst addMessage = (messageList, messageObj) => {\n  return [...messageList, messageObj];\n};\nconst getTimestamp = () => {\n  return firebase.firestore.FieldValue.serverTimestamp();\n};","map":{"version":3,"names":["useRef","addDoc","db","sendMessage","fromId","toId","messageObj","userRef","collection","fromUser","getUser","toUser","timestamp","getTimestamp","updateUser","sentMessages","addMessage","mailbox","error","console","userId","userDoc","doc","get","exists","data","update","messageList","firebase","firestore","FieldValue","serverTimestamp"],"sources":["/Users/ndmx/Dev/adminpanel/admin/src/utils/mockDatabase.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { addDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nexport const sendMessage = async (fromId, toId, messageObj) => {\n  const userRef = db.collection(\"users\");\n\n  try {\n    const fromUser = await getUser(fromId);\n    const toUser = await getUser(toId);\n\n    if (!fromUser || !toUser) {\n      return false;\n    }\n\n    messageObj.timestamp = getTimestamp();\n\n    await updateUser(fromId, {\n      sentMessages: addMessage(fromUser.sentMessages, messageObj),\n    });\n\n    await updateUser(toId, {\n      mailbox: addMessage(toUser.mailbox, messageObj),\n    });\n\n    return true;\n  } catch (error) {\n    console.error(\"Error sending message: \", error);\n    return false;\n  }\n};\n\nconst getUser = async (userId) => {\n  const userDoc = await db.collection(\"users\").doc(userId).get();\n  return userDoc.exists ? userDoc.data() : null;\n};\n\nconst updateUser = async (userId, data) => {\n  await db.collection(\"users\").doc(userId).update(data);\n};\n\nconst addMessage = (messageList, messageObj) => {\n  return [...messageList, messageObj];\n};\n\nconst getTimestamp = () => {\n  return firebase.firestore.FieldValue.serverTimestamp();\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAEhC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,UAAU,KAAK;EAC7D,MAAMC,OAAO,GAAGL,EAAE,CAACM,UAAU,CAAC,OAAO,CAAC;EAEtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACN,MAAM,CAAC;IACtC,MAAMO,MAAM,GAAG,MAAMD,OAAO,CAACL,IAAI,CAAC;IAElC,IAAI,CAACI,QAAQ,IAAI,CAACE,MAAM,EAAE;MACxB,OAAO,KAAK;IACd;IAEAL,UAAU,CAACM,SAAS,GAAGC,YAAY,CAAC,CAAC;IAErC,MAAMC,UAAU,CAACV,MAAM,EAAE;MACvBW,YAAY,EAAEC,UAAU,CAACP,QAAQ,CAACM,YAAY,EAAET,UAAU;IAC5D,CAAC,CAAC;IAEF,MAAMQ,UAAU,CAACT,IAAI,EAAE;MACrBY,OAAO,EAAED,UAAU,CAACL,MAAM,CAACM,OAAO,EAAEX,UAAU;IAChD,CAAC,CAAC;IAEF,OAAO,IAAI;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMR,OAAO,GAAG,MAAOU,MAAM,IAAK;EAChC,MAAMC,OAAO,GAAG,MAAMnB,EAAE,CAACM,UAAU,CAAC,OAAO,CAAC,CAACc,GAAG,CAACF,MAAM,CAAC,CAACG,GAAG,CAAC,CAAC;EAC9D,OAAOF,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACI,IAAI,CAAC,CAAC,GAAG,IAAI;AAC/C,CAAC;AAED,MAAMX,UAAU,GAAG,MAAAA,CAAOM,MAAM,EAAEK,IAAI,KAAK;EACzC,MAAMvB,EAAE,CAACM,UAAU,CAAC,OAAO,CAAC,CAACc,GAAG,CAACF,MAAM,CAAC,CAACM,MAAM,CAACD,IAAI,CAAC;AACvD,CAAC;AAED,MAAMT,UAAU,GAAGA,CAACW,WAAW,EAAErB,UAAU,KAAK;EAC9C,OAAO,CAAC,GAAGqB,WAAW,EAAErB,UAAU,CAAC;AACrC,CAAC;AAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAOe,QAAQ,CAACC,SAAS,CAACC,UAAU,CAACC,eAAe,CAAC,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}