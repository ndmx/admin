{"ast":null,"code":"// mockDatabase.js\nexport const usersDatabase = [{\n  id: '1',\n  username: 'johndoe1',\n  password: 'password1',\n  image: 'profile1.jpg',\n  email: 'user1@example.com',\n  message: 'Welcome John, enjoy your stay!',\n  mailbox: [{\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }, {\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }, {\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }, {\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }\n  // more emails\n  ],\n\n  sentMessages: []\n}, {\n  id: '2',\n  username: 'alexander1',\n  password: 'password2',\n  image: 'profile2.jpg',\n  email: 'user2@example.com',\n  message: 'Hi Alex, this is your dashboard.',\n  mailbox: [{\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }, {\n    fromName: 'Colleague',\n    fromEmail: 'colleague@example.com',\n    message: 'Please review the latest changes.',\n    timestamp: '2022-01-02 10:30:00'\n  }, {\n    fromName: 'Friend',\n    fromEmail: 'friend@example.com',\n    message: 'Hi there!',\n    timestamp: '2022-01-01 12:34:56'\n  }\n  // more emails\n  ],\n\n  sentMessages: []\n}\n// Add more users here\n];\n\nexport const sendMessage = (fromId, toId, messageObj) => {\n  const fromUser = usersDatabase.find(user => user.id === fromId);\n  const toUser = usersDatabase.find(user => user.id === toId);\n  if (!fromUser || !toUser) {\n    return false;\n  }\n  toUser.mailbox.push(messageObj);\n  fromUser.sentMessages.push(messageObj);\n  return true;\n};","map":{"version":3,"names":["usersDatabase","id","username","password","image","email","message","mailbox","fromName","fromEmail","timestamp","sentMessages","sendMessage","fromId","toId","messageObj","fromUser","find","user","toUser","push"],"sources":["/Users/ndmx/Dev/adminpanel/admin/src/utils/mockDatabase.js"],"sourcesContent":["// mockDatabase.js\nexport const usersDatabase = [\n    {\n      id: '1',\n      username: 'johndoe1',\n      password: 'password1',\n      image: 'profile1.jpg',\n      email: 'user1@example.com',\n      message: 'Welcome John, enjoy your stay!',\n      mailbox: [\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        // more emails\n      ],\n      sentMessages: [],\n    },\n    {\n      id: '2',\n      username: 'alexander1',\n      password: 'password2',\n      image: 'profile2.jpg',\n      email: 'user2@example.com',\n      message: 'Hi Alex, this is your dashboard.',\n      mailbox: [\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        { fromName: 'Colleague', fromEmail: 'colleague@example.com', message: 'Please review the latest changes.', timestamp: '2022-01-02 10:30:00' },\n        { fromName: 'Friend', fromEmail: 'friend@example.com', message: 'Hi there!', timestamp: '2022-01-01 12:34:56' },\n        // more emails\n      ],\n      sentMessages: [],\n    },\n    // Add more users here\n  ];\n  export const sendMessage = (fromId, toId, messageObj) => {\n    const fromUser = usersDatabase.find((user) => user.id === fromId);\n    const toUser = usersDatabase.find((user) => user.id === toId);\n  \n    if (!fromUser || !toUser) {\n      return false;\n    }\n  \n    toUser.mailbox.push(messageObj);\n    fromUser.sentMessages.push(messageObj);\n    return true;\n  };\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CACzB;EACEC,EAAE,EAAE,GAAG;EACPC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,WAAW;EACrBC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,mBAAmB;EAC1BC,OAAO,EAAE,gCAAgC;EACzCC,OAAO,EAAE,CACP;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB,CAAC,EAC/G;IAAEF,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB,CAAC,EAC/G;IAAEF,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB,CAAC,EAC/G;IAAEF,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB;EAC9G;EAAA,CACD;;EACDC,YAAY,EAAE;AAChB,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,WAAW;EACrBC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,mBAAmB;EAC1BC,OAAO,EAAE,kCAAkC;EAC3CC,OAAO,EAAE,CACP;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB,CAAC,EAC/G;IAAEF,QAAQ,EAAE,WAAW;IAAEC,SAAS,EAAE,uBAAuB;IAAEH,OAAO,EAAE,mCAAmC;IAAEI,SAAS,EAAE;EAAsB,CAAC,EAC7I;IAAEF,QAAQ,EAAE,QAAQ;IAAEC,SAAS,EAAE,oBAAoB;IAAEH,OAAO,EAAE,WAAW;IAAEI,SAAS,EAAE;EAAsB;EAC9G;EAAA,CACD;;EACDC,YAAY,EAAE;AAChB;AACA;AAAA,CACD;;AACD,OAAO,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,UAAU,KAAK;EACvD,MAAMC,QAAQ,GAAGhB,aAAa,CAACiB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKY,MAAM,CAAC;EACjE,MAAMM,MAAM,GAAGnB,aAAa,CAACiB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKa,IAAI,CAAC;EAE7D,IAAI,CAACE,QAAQ,IAAI,CAACG,MAAM,EAAE;IACxB,OAAO,KAAK;EACd;EAEAA,MAAM,CAACZ,OAAO,CAACa,IAAI,CAACL,UAAU,CAAC;EAC/BC,QAAQ,CAACL,YAAY,CAACS,IAAI,CAACL,UAAU,CAAC;EACtC,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}