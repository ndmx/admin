{"ast":null,"code":"import firebase from \"firebase/app\";\nimport db from \"../firebaseConfig\";\nexport const sendMessage = async (fromId, toId, messageObj) => {\n  const userRef = db.collection(\"users\");\n  try {\n    // Get fromUser and toUser\n    const fromUser = await userRef.doc(fromId).get();\n    const toUser = await userRef.doc(toId).get();\n    if (!fromUser.exists || !toUser.exists) {\n      return false;\n    }\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp();\n    messageObj.timestamp = timestamp;\n\n    // Push messageObj to fromUser and toUser\n    await userRef.doc(fromId).update({\n      sentMessages: firebase.firestore.FieldValue.arrayUnion(messageObj)\n    });\n    await userRef.doc(toId).update({\n      mailbox: firebase.firestore.FieldValue.arrayUnion(messageObj)\n    });\n    return true;\n  } catch (error) {\n    console.error(\"Error sending message: \", error);\n    return false;\n  }\n};","map":{"version":3,"names":["firebase","db","sendMessage","fromId","toId","messageObj","userRef","collection","fromUser","doc","get","toUser","exists","timestamp","firestore","FieldValue","serverTimestamp","update","sentMessages","arrayUnion","mailbox","error","console"],"sources":["/Users/ndmx/Dev/adminpanel/admin/src/utils/mockDatabase.js"],"sourcesContent":["import firebase from \"firebase/app\";\nimport db from \"../firebaseConfig\";\n\nexport const sendMessage = async (fromId, toId, messageObj) => {\n  const userRef = db.collection(\"users\");\n  \n  try {\n    // Get fromUser and toUser\n    const fromUser = await userRef.doc(fromId).get();\n    const toUser = await userRef.doc(toId).get();\n    \n    if (!fromUser.exists || !toUser.exists) {\n      return false;\n    }\n\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp();\n    messageObj.timestamp = timestamp;\n    \n    // Push messageObj to fromUser and toUser\n    await userRef.doc(fromId).update({\n      sentMessages: firebase.firestore.FieldValue.arrayUnion(messageObj),\n    });\n    \n    await userRef.doc(toId).update({\n      mailbox: firebase.firestore.FieldValue.arrayUnion(messageObj),\n    });\n    \n    return true;\n  } catch (error) {\n    console.error(\"Error sending message: \", error);\n    return false;\n  }\n};\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,cAAc;AACnC,OAAOC,EAAE,MAAM,mBAAmB;AAElC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,UAAU,KAAK;EAC7D,MAAMC,OAAO,GAAGL,EAAE,CAACM,UAAU,CAAC,OAAO,CAAC;EAEtC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,GAAG,CAACN,MAAM,CAAC,CAACO,GAAG,CAAC,CAAC;IAChD,MAAMC,MAAM,GAAG,MAAML,OAAO,CAACG,GAAG,CAACL,IAAI,CAAC,CAACM,GAAG,CAAC,CAAC;IAE5C,IAAI,CAACF,QAAQ,CAACI,MAAM,IAAI,CAACD,MAAM,CAACC,MAAM,EAAE;MACtC,OAAO,KAAK;IACd;IAEA,MAAMC,SAAS,GAAGb,QAAQ,CAACc,SAAS,CAACC,UAAU,CAACC,eAAe,CAAC,CAAC;IACjEX,UAAU,CAACQ,SAAS,GAAGA,SAAS;;IAEhC;IACA,MAAMP,OAAO,CAACG,GAAG,CAACN,MAAM,CAAC,CAACc,MAAM,CAAC;MAC/BC,YAAY,EAAElB,QAAQ,CAACc,SAAS,CAACC,UAAU,CAACI,UAAU,CAACd,UAAU;IACnE,CAAC,CAAC;IAEF,MAAMC,OAAO,CAACG,GAAG,CAACL,IAAI,CAAC,CAACa,MAAM,CAAC;MAC7BG,OAAO,EAAEpB,QAAQ,CAACc,SAAS,CAACC,UAAU,CAACI,UAAU,CAACd,UAAU;IAC9D,CAAC,CAAC;IAEF,OAAO,IAAI;EACb,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}